name: Auto-Fix

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-fix:
    name: Auto-Fix Code
    runs-on: ubuntu-latest
    # Skip if previous commit was auto-fix to prevent loops
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Use the PR head ref if PR, otherwise use default
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}
          # Use token with write permissions
          token: ${{ secrets.GITHUB_TOKEN }}
          # Fetch full history for better git operations
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            .mypy_cache
          key: ${{ runner.os }}-pip-autofix-${{ hashFiles('**/requirements*.txt', '**/setup.py', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-autofix-
            ${{ runner.os }}-pip-

      - name: Install formatting tools
        run: |
          python -m pip install --upgrade pip
          pip install black isort autoflake

      - name: Configure git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Auto-Fix Bot"

      - name: Check if last commit was auto-fix
        id: last_commit
        run: |
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$LAST_COMMIT_MSG" == *"[auto-fix]"* ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "Last commit was auto-fix, skipping to prevent loops"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Auto-fix with black
        if: steps.last_commit.outputs.skip != 'true'
        run: |
          echo "Running black formatter..."
          black . --exclude '/(\.git|\.venv|venv|build|dist|\.eggs)/' || true

      - name: Auto-fix with isort
        if: steps.last_commit.outputs.skip != 'true'
        run: |
          echo "Running isort..."
          isort . --skip-glob '**/venv/*' --skip-glob '**/.venv/*' || true

      - name: Auto-fix with autoflake
        if: steps.last_commit.outputs.skip != 'true'
        run: |
          echo "Running autoflake to remove unused imports..."
          autoflake --in-place --recursive --remove-all-unused-imports --remove-unused-variables --exclude=venv,.venv . || true

      - name: Check for changes
        if: steps.last_commit.outputs.skip != 'true'
        id: verify_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Code formatting changes detected"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No code formatting changes needed"
          fi

      - name: Commit and push changes
        if: steps.last_commit.outputs.skip != 'true' && steps.verify_changes.outputs.changes == 'true'
        run: |
          # Add all changes
          git add -A

          # Commit with [skip ci] to prevent CI loops
          git commit -m "ðŸ¤– [auto-fix] Format code with black, isort, and autoflake [skip ci]

          Auto-formatted by GitHub Actions:
          - Applied black code formatting
          - Sorted imports with isort
          - Removed unused imports with autoflake"

          # Push changes
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Pushing to PR branch..."
            git push origin HEAD:${{ github.event.pull_request.head.ref }}
          else
            echo "Pushing to branch..."
            git push origin HEAD
          fi

      - name: Comment on PR
        if: |
          github.event_name == 'pull_request' &&
          steps.last_commit.outputs.skip != 'true' &&
          steps.verify_changes.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ¤– **Auto-Fix Applied**\n\nI\'ve automatically formatted your code with:\n- âœ¨ **black** - Python code formatter\n- ðŸ“¦ **isort** - Import statement organizer\n- ðŸ§¹ **autoflake** - Unused import remover\n\nThe changes have been pushed to your PR. Please pull the latest changes to your local branch.'
            })

      - name: Success notification
        if: steps.last_commit.outputs.skip != 'true'
        run: |
          if [[ "${{ steps.verify_changes.outputs.changes }}" == "true" ]]; then
            echo "âœ… Code formatting fixes applied and committed"
          else
            echo "âœ… Code is already properly formatted"
          fi
